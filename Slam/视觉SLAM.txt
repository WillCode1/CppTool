岗位职责主要是：框架搭建、算法优化、场景优化。
环境重建、定位融合、自动标定系统。

缩小图像：下采样（subsampled）或降采样（downsampled）
放大图像：上采样（upsampling）或图像插值（interpolating）

硬件上鱼眼相机都是一样的，ocam模型和openCV只是多项式不同，ocam模型的话，多项式位数会更高，对畸变的拟合更好，但相应的也会存在过拟合的风险
======================================
opencv接口：
cv::cvtColor
--->灰度图无法恢复到RGB，因为丢失信息

cv::inRange
--->对图像的三个通道同时做阈值范围限制，在三个通道阈值范围内的像素值设为二值化中的高值，比如255，不在三个通道阈值范围内的像素值设为二值化中的低值，比如0，最后输出的图像是单通道图像

cv::Mat Mat::rowRange(int startrow, int endrow) const;
cv::Mat Mat::colRange(int startrow, int endrow) const;
--->获取某些范围内行或列的指针

cv::findChessboardCorners
cv::goodFeaturesToTrack: https://blog.csdn.net/guduruyu/article/details/69537083
cv::cornerSubPix
--->角点亚像素精确化，精确到小数

cv::calibrateCamera(objectPoints, imagePoints, imageSize, cameraMatrix, distCoeffs, rvecs, tvecs, flags)
--->从一个校准模式的几个视图中找到相机的内参和外参。
--->参数：世界坐标系中的三维点，图像坐标系中的二维点，用于计算的尺寸，相机内参，畸变参数，相机外参，模式
--->stereoCalibrate, calibrateCameraRO

cv::projectPoints(objectPoints, rvec, tvec, cameraMatrix, distCoeffs, imagePoints)
--->投影三维点到一个图像平面。
--->参数：世界坐标系中的三维点，相机外参，相机内参，畸变参数，图像坐标系中的二维点

cv::solvePnP
--->可以用于外参标定、或者求解相机位姿(3D-2D)

cv::undistort
--->图像去畸变
--->cv::initUndistortRectifyMap + cv::remap

https://www.cnblogs.com/xixixing/p/12335317.html
seamlessClone():无缝融合
colorChange():调试颜色
illuminationChange():消除高亮
textureFlattening():纹理扁平化

===================================
相机标定：
焦距f：光心到成像平面的距离
相机内参(intrinsic)：f_x、f_y、c_x、c_y
--->f_x, f_y表示像素坐标在u,v轴上缩放了多少倍 * 焦距f
--->c_x，c_y表示像素坐标平移了多少
畸变参数
--->多项式拟合

相机外参标定方法：PnP方法
(1)undistort，畸变矩阵可以填在solvePnP中
(2)获得world坐标、uv坐标、内参K(和畸变参数)
(3)solvePnP或solvePnPRansac
(4)如何不用标定板来确定相机的外参矩阵: https://www.zhihu.com/question/53498780
(5)其他方法：把uv坐标转到camera系，然后与world坐标做icp?

相机外参：https://blog.csdn.net/CharmingSun/article/details/97445425
--->相机的位姿有Tcw​和Twc​两种表示方式，其中Tcw​又称为相机的外参数。

===================================
DBoW2
https://zhehangt.github.io/2018/04/11/SLAM/ORBSLAM/ORBSLAM2LoopClosing/
https://zhuanlan.zhihu.com/p/354616831
DBoW2::BowVector mBowVec;
DBoW2::FeatureVector mFeatVec;
--->如何理解正逆索引: 正: keyframe->WordId, 逆: WordId->keyframe
--->正逆索引作用?
--->DBoW2::BowVector mBowVec是从std::map<WordId, WordValue>继承的，这里的WordId的取值范围即为生成词袋模型时word的数目($k^n$)。
这里存储的WordValue是 word 的 WordValue的累加值，当图像中的多个特征都与WordId对应的word相似，这里存储的WordValue是对 word 中的 WordValue的多次累加。
--->DBoW2::FeatureVector mFeatVec是被称为 direct index 的东西，用来支持图像与图像之间特征匹配的速度。
其从std::map<NodeId, std::vector<unsigned int>>继承，NodeId是词袋树中某一层的节点的id，在ORB_SLAM2中是倒数第四层，std::vector<unsigned int>保存的是与该节点下的 word 匹配的特征点的id(1对多)。


*****一些相关流程的学习
1.一些评估流程：精度、地图质量评估
2.一些辅助工具：查看工具
3.一些预处理流程：分割、提取
4.词袋模型如何训练
5.标定相关: imu、相机、激光

===================================
3.相机外参在线标定
还有就是可以同时去调研一下，一些在线标定的方案，就是不依赖棋盘格等特殊环境的标定方案。
我们目前有基于车道线的在线标定，效果还可以但不是十分鲁棒。
用标定板的自动标定是要纯视觉去标，但在线标定的话，可以考虑用上IMU、轮速计之类的信息

双边滤波、直方图
(0)初始位置，保证有足够多行和列点，否则失败
(1)亚像素调整
(2)直方图调整
(1)和(0)差太远，使用(2)
(2)和(0)也差太远，使用(0)
失败次数过多时，标定失败。

代替直方图的方法：
(1)膨胀腐蚀(最大值滤波,类似于中值滤波)

==================================
我这边手上的标定包括：
1.单目内参库的提升(和matlab对比存在差距)(optional)
2.前视单目的外参标定(手动版)
3.前世单目的外参标定(自动版-测试+集成)
4.畸变表管理(硬件去畸变+特殊场景支持)
5.单目前世外参标定(量产版本-待开发，针对前后视，周视)
6.日常标定的方案输出和管理
7.双目内参+外参库标定整理

1.auto_gt
2.行车过程在线标定(需要四个相机单独建图)
3.采集相机不同角度的图片验证orb方法

鱼眼相机模型、畸变参数
单木相机尺度初始化ORB-SLAM2
阅读环视图像拼接代码
相机标定代码拷贝
