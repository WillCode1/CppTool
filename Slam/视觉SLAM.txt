缩小图像：下采样（subsampled）或降采样（downsampled）
放大图像：上采样（upsampling）或图像插值（interpolating）

硬件上鱼眼相机都是一样的，ocam模型和openCV只是多项式不同，ocam模型的话，多项式位数会更高，对畸变的拟合更好，但相应的也会存在过拟合的风险

ORB算子
======================================
cv::cvtColor
--->灰度图无法恢复到RGB，因为丢失信息

cv::Mat Mat::rowRange(int startrow, int endrow) const;
cv::Mat Mat::colRange(int startrow, int endrow) const;
--->获取某些范围内行或列的指针

cv::findChessboardCorners
cv::goodFeaturesToTrack: https://blog.csdn.net/guduruyu/article/details/69537083
cv::cornerSubPix：角点亚像素精确化

cv::calibrateCamera(objectPoints, imagePoints, imageSize, cameraMatrix, distCoeffs, rvecs, tvecs, flags)
--->从一个校准模式的几个视图中找到相机的内参和外参。
--->参数：世界坐标系中的三维点，图像坐标系中的二维点，用于计算的尺寸，相机内参，畸变参数，相机外参，模式
--->stereoCalibrate, calibrateCameraRO, undistort, solvePnP

cv::projectPoints(objectPoints, rvec, tvec, cameraMatrix, distCoeffs, imagePoints)
--->投影三维点到一个图像平面。
--->参数：世界坐标系中的三维点，相机外参，相机内参，畸变参数，图像坐标系中的二维点

cv::initUndistortRectifyMap

===================================
焦距f：光心到成像平面的距离
相机内参(intrinsic)：f_x、f_y、c_x、c_y
--->f_x, f_y表示像素坐标在u,v轴上缩放了多少倍 * 焦距f
--->c_x，c_y表示像素坐标平移了多少
畸变参数

===================================
1.相机外参标定流水线(camera_system_extrinsic_calibration)
就是要把一辆车，前后左右的摄像头外参都算出来，然后拼成一幅图
这个过程目前是要提前采集图像，然后手动标定完外参后，再拼接。
现在有需求，要把这个过程做成流水线形式的，车开上去，按个按钮，就标定好了

2.鱼眼相机自动检测角点
车身对齐世界坐标系情况
--->将已知固定位置的3d世界角点，转为像坐标点，然后亚像素优化，先从中间近处给出先验，再迭代所有
--->近处可以每个相机选出固定点先投影，再所有
--->亚像素调整:
(2)可以从world坐标系投射一些角点周围点到图像提取像素，计算周围像素梯度，过滤异常值
--->g2o，惩罚项可以改成到图像底部中间的距离(离图片中间点，距离越远，畸变越大。)
--->stitch中车身坐标系的计算
--->adjustCorner
--->反投回去间距不一致，表明失该点失效

3.相机外参在线标定
还有就是可以同时去调研一下，一些在线标定的方案，就是不依赖棋盘格等特殊环境的标定方案。
我们目前有基于车道线的在线标定，效果还可以但不是十分鲁棒。
用标定板的自动标定是要纯视觉去标，但在线标定的话，可以考虑用上IMU、轮速计之类的信息

==================================
我这边手上的标定包括：
1.单目内参库的提升(和matlab对比存在差距)(optional)
2.前视单目的外参标定(手动版)
3.前世单目的外参标定(自动版-测试+集成)
4.畸变表管理(硬件去畸变+特殊场景支持)
5.单目前世外参标定(量产版本-待开发，针对前后视，周视)
6.日常标定的方案输出和管理
7.双目内参+外参库标定整理

1.auto_gt
2.行车过程在线标定(需要四个相机单独建图)
3.采集相机不同角度的图片验证orb方法


